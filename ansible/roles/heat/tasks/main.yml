# Copyright 2016, Sandvine Incorporated
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Installing Heat
  action: apt pkg={{item}} state=installed
  with_items:
    - heat-api
    - heat-api-cfn
    - heat-engine
    - python-heatclient
  register: heat_installed

- name: Stopping Heat API
  service: name=heat-api state=stopped
  when: heat_installed|changed
  register: api_stopped

- name: Stopping Heat API CFN
  service: name=heat-api-cfn state=stopped
  when: heat_installed|changed
  register: api_cfn_stopped

- name: Stopping Heat Engine
  service: name=heat-engine state=stopped
  when: heat_installed|changed
  register: engine_stopped

- name: Removing non-used sqlite database
  file: path=/var/lib/heat/heat.sqlite state=absent
  when: heat_installed|changed
  register: heat_cleaned


- name: Updating heat.conf
  template: src=heat.conf
        dest=/etc/heat/heat.conf
        owner=heat
        group=heat
        mode=0640
        backup=yes
  when: heat_installed|changed and item.os_project == "heat"
  with_items: mysql_databases
  register: heat_cfg_updated


- name: Setting up Heat Domain with heat-keystone-setup-domain
  environment: admin_openrc_env
  shell: domid=$(heat-keystone-setup-domain --stack-user-domain-name heat_user_domain --stack-domain-admin heat_domain_admin --stack-domain-admin-password calor_do_heat | grep stack_user_domain_id | cut -d = -f 2) ; sed -i -e 's/^#stack_user_domain_id=/stack_user_domain_id='$domid'/g' /etc/heat/heat.conf
  when: heat_cfg_updated|changed
  register: heat_ready


- name: Populating Heat Database
  shell: su -s /bin/sh -c "heat-manage db_sync" heat
  register: heat_populated
  when: heat_ready|changed


- name: Starting Heat API
  service: name=heat-api state=restarted
  when: heat_populated|changed
  register: api_started

- name: Starting Heat API CFN
  service: name=heat-api-cfn state=restarted
  when: heat_populated|changed
  register: api_cfn_stopped

- name: Starting Heat Engine
  service: name=heat-engine state=restarted
  when: heat_populated|changed
  register: engine_started
